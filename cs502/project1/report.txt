Project 1- Compiler
Name:Adib Rastegarnia
email: arastega@purdue.edu

In this report I provide a summary of the work that I have done for this
project. 

Introduction:
My program supports all of the required parts for project 1. I have tested
with different test cases and I think it should be OK.

----------------------------------------------------------------------------------

My functions are defined as follows:
1- cs502_proj1(): I called other functions from this function. In addition, print 
the output into a file inside of this function.

2- Global_vars_parse: This function is written in order to count the number of
global varibales. For this part,  varpool_node structure is used in order
to count global variables. In addition, global variables are counted as the
statements as well. 

3- function_parse: This function is used in order to count the number of
functions. The input parameter of this function is a tree that is coming from one of the
nodes in the cgraph_node structure(This function is called from cs502_proj1). 
In addition, if the input tree is a FUNCTION_DECL (by checking the tree_code), then function
body is extracted using DECL_SAVED_TREE. In this step, the tree code for the
output of function body is compared with BIND_EXPR and if it is BIND_EXPR (These
nodes represent local blocsk) then the first and second child of function body
is extracted using TREE_OPERAND command. I have written another function that
is called parse_tree this function is responsible to traverse the children of
function body. 



4- parse_tree: This function has two arguments: A tree that is coming from the
children of function body and a callback function that is responsible for
counting the local variables. Basically this function is a recursive function.
First of all of, we should check the current tree is a statement list or not if
it is a statementlist then we have used an iterator in order to call this
function recursively for each of the statements. if the current tree is not a statements
list then we call the parse_tree function
for each of the children of the current tree recursively (0,1,and 2).  In this
function in order to detect while, return, if-else, switch-case, blocks, and
different types of operators, I have written different conditions in order to
check the tree_code for each of the specefic statements. 


5- local_var_counter: This function is responsible for counting the local
varibales. In order to count the local variables, the tree code's name of
current tree is compared with DECL_EXPR. If the tree code of the input tree is
 decl_expr then the number of local varibales is increased by 1. 








